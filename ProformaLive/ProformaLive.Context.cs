//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProformaLive
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProformaLiveEntities : DbContext
    {
        public ProformaLiveEntities()
            : base("name=ProformaLiveEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<APP_PFL_RESOURCES_SS_V> APP_PFL_RESOURCES_SS_V { get; set; }
        public virtual DbSet<CapitalInfo> CapitalInfoes { get; set; }
        public virtual DbSet<CapitalInfoComment> CapitalInfoComments { get; set; }
        public virtual DbSet<CapitalInfoList> CapitalInfoLists { get; set; }
        public virtual DbSet<CapitalLaborInfo> CapitalLaborInfoes { get; set; }
        public virtual DbSet<CapitalLaborInfoComment> CapitalLaborInfoComments { get; set; }
        public virtual DbSet<CapitalLaborInfoList> CapitalLaborInfoLists { get; set; }
        public virtual DbSet<Configure_App_Master> Configure_App_Master { get; set; }
        public virtual DbSet<Configure_Project> Configure_Project { get; set; }
        public virtual DbSet<Configure_ProjectComments> Configure_ProjectComments { get; set; }
        public virtual DbSet<Configure_RateCard> Configure_RateCard { get; set; }
        public virtual DbSet<Configure_Skill> Configure_Skill { get; set; }
        public virtual DbSet<DirectExpenses_OpenPO> DirectExpenses_OpenPO { get; set; }
        public virtual DbSet<DirectExpensesInfo> DirectExpensesInfoes { get; set; }
        public virtual DbSet<DirectExpensesInfo_CJI3_Selection> DirectExpensesInfo_CJI3_Selection { get; set; }
        public virtual DbSet<DirectExpensesInfoComment> DirectExpensesInfoComments { get; set; }
        public virtual DbSet<DirectExpensesInfoList> DirectExpensesInfoLists { get; set; }
        public virtual DbSet<Master_AOPProject> Master_AOPProject { get; set; }
        public virtual DbSet<Master_CJI3> Master_CJI3 { get; set; }
        public virtual DbSet<Master_Months> Master_Months { get; set; }
        public virtual DbSet<Master_ProjectChargeBack> Master_ProjectChargeBack { get; set; }
        public virtual DbSet<Master_Qtr> Master_Qtr { get; set; }
        public virtual DbSet<Master_SAP_PO_Data> Master_SAP_PO_Data { get; set; }
        public virtual DbSet<Master_Snapshot_Config> Master_Snapshot_Config { get; set; }
        public virtual DbSet<Master_Summary> Master_Summary { get; set; }
        public virtual DbSet<Master_VendorList> Master_VendorList { get; set; }
        public virtual DbSet<Notification_Log> Notification_Log { get; set; }
        public virtual DbSet<NotificationPanel> NotificationPanels { get; set; }
        public virtual DbSet<PFL_MDT_FISCAL_DAYS> PFL_MDT_FISCAL_DAYS { get; set; }
        public virtual DbSet<PFL_MDT_PDW> PFL_MDT_PDW { get; set; }
        public virtual DbSet<PFL_MDT_SKILLS> PFL_MDT_SKILLS { get; set; }
        public virtual DbSet<Proforma_DataFrasfer_DuplicateData> Proforma_DataFrasfer_DuplicateData { get; set; }
        public virtual DbSet<Resource_TempData> Resource_TempData { get; set; }
        public virtual DbSet<ResourceInfo> ResourceInfoes { get; set; }
        public virtual DbSet<ResourceInfoComment> ResourceInfoComments { get; set; }
        public virtual DbSet<ResourceInfoList> ResourceInfoLists { get; set; }
        public virtual DbSet<Service_log> Service_log { get; set; }
        public virtual DbSet<Temp_ProjectMaster> Temp_ProjectMaster { get; set; }
    
        public virtual ObjectResult<Get_DirectExpensesInfo_CJI3_Selection_Validation_Result> Get_DirectExpensesInfo_CJI3_Selection_Validation(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_DirectExpensesInfo_CJI3_Selection_Validation_Result>("Get_DirectExpensesInfo_CJI3_Selection_Validation", projectIDParameter);
        }
    
        public virtual int Insert_DirectExpensesInfo_CJI3_Selection(Nullable<int> projectID, string fiscalYear, string month, string postingDate, string @object, string cO_Object_Name, string costElementName, string purchasingDocument, string purchaseOrderText, string nameOfOffsettingaccount, Nullable<decimal> totalQuantity, Nullable<decimal> val_COAreaCrcy, string userName, string dE_ExpenseCategory, string description)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var postingDateParameter = postingDate != null ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(string));
    
            var objectParameter = @object != null ?
                new ObjectParameter("Object", @object) :
                new ObjectParameter("Object", typeof(string));
    
            var cO_Object_NameParameter = cO_Object_Name != null ?
                new ObjectParameter("CO_Object_Name", cO_Object_Name) :
                new ObjectParameter("CO_Object_Name", typeof(string));
    
            var costElementNameParameter = costElementName != null ?
                new ObjectParameter("CostElementName", costElementName) :
                new ObjectParameter("CostElementName", typeof(string));
    
            var purchasingDocumentParameter = purchasingDocument != null ?
                new ObjectParameter("PurchasingDocument", purchasingDocument) :
                new ObjectParameter("PurchasingDocument", typeof(string));
    
            var purchaseOrderTextParameter = purchaseOrderText != null ?
                new ObjectParameter("PurchaseOrderText", purchaseOrderText) :
                new ObjectParameter("PurchaseOrderText", typeof(string));
    
            var nameOfOffsettingaccountParameter = nameOfOffsettingaccount != null ?
                new ObjectParameter("NameOfOffsettingaccount", nameOfOffsettingaccount) :
                new ObjectParameter("NameOfOffsettingaccount", typeof(string));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("TotalQuantity", totalQuantity) :
                new ObjectParameter("TotalQuantity", typeof(decimal));
    
            var val_COAreaCrcyParameter = val_COAreaCrcy.HasValue ?
                new ObjectParameter("Val_COAreaCrcy", val_COAreaCrcy) :
                new ObjectParameter("Val_COAreaCrcy", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var dE_ExpenseCategoryParameter = dE_ExpenseCategory != null ?
                new ObjectParameter("DE_ExpenseCategory", dE_ExpenseCategory) :
                new ObjectParameter("DE_ExpenseCategory", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_DirectExpensesInfo_CJI3_Selection", projectIDParameter, fiscalYearParameter, monthParameter, postingDateParameter, objectParameter, cO_Object_NameParameter, costElementNameParameter, purchasingDocumentParameter, purchaseOrderTextParameter, nameOfOffsettingaccountParameter, totalQuantityParameter, val_COAreaCrcyParameter, userNameParameter, dE_ExpenseCategoryParameter, descriptionParameter);
        }
    
        public virtual int SP_APP_PFL_RESOURCES_SS_V_BulkInsert(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_APP_PFL_RESOURCES_SS_V_BulkInsert", dateParameter);
        }
    
        public virtual int SP_Clone_Proforma(Nullable<int> projectID, string clonedProjectID, string clonedProjectName, string createdBy)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var clonedProjectIDParameter = clonedProjectID != null ?
                new ObjectParameter("ClonedProjectID", clonedProjectID) :
                new ObjectParameter("ClonedProjectID", typeof(string));
    
            var clonedProjectNameParameter = clonedProjectName != null ?
                new ObjectParameter("ClonedProjectName", clonedProjectName) :
                new ObjectParameter("ClonedProjectName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Clone_Proforma", projectIDParameter, clonedProjectIDParameter, clonedProjectNameParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SP_Config_Projects_Result> SP_Config_Projects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Config_Projects_Result>("SP_Config_Projects");
        }
    
        public virtual ObjectResult<string> SP_Config_Projects_CapitalGRPType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Config_Projects_CapitalGRPType");
        }
    
        public virtual ObjectResult<string> SP_Config_Projects_Funded()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Config_Projects_Funded");
        }
    
        public virtual ObjectResult<string> SP_Config_Projects_InPLAN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Config_Projects_InPLAN");
        }
    
        public virtual ObjectResult<string> SP_Config_Projects_ParentChild()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Config_Projects_ParentChild");
        }
    
        public virtual ObjectResult<string> SP_Config_Projects_ProjectCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Config_Projects_ProjectCategory");
        }
    
        public virtual int SP_CreateNew_Proforma(Nullable<int> projectID, string clonedProjectID, string clonedProjectName, string createdBy)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var clonedProjectIDParameter = clonedProjectID != null ?
                new ObjectParameter("ClonedProjectID", clonedProjectID) :
                new ObjectParameter("ClonedProjectID", typeof(string));
    
            var clonedProjectNameParameter = clonedProjectName != null ?
                new ObjectParameter("ClonedProjectName", clonedProjectName) :
                new ObjectParameter("ClonedProjectName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateNew_Proforma", projectIDParameter, clonedProjectIDParameter, clonedProjectNameParameter, createdByParameter);
        }
    
        public virtual int SP_Delete_CapitalData(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_CapitalData", iDParameter);
        }
    
        public virtual int SP_Delete_CapitalLaborInfo(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_CapitalLaborInfo", iDParameter);
        }
    
        public virtual int SP_Delete_DirectExpensesInfo(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_DirectExpensesInfo", iDParameter);
        }
    
        public virtual int SP_Delete_ResourceData(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_ResourceData", iDParameter);
        }
    
        public virtual int SP_DeleteProjectData(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteProjectData", projectIDParameter);
        }
    
        public virtual int SP_Duplicate_CapitallaborRows(Nullable<int> iD, string userID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Duplicate_CapitallaborRows", iDParameter, userIDParameter);
        }
    
        public virtual int SP_Duplicate_CapitalRows(Nullable<int> iD, string userID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Duplicate_CapitalRows", iDParameter, userIDParameter);
        }
    
        public virtual int SP_Duplicate_Directexpenses(Nullable<int> iD, string userID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Duplicate_Directexpenses", iDParameter, userIDParameter);
        }
    
        public virtual int SP_DuplicateRows(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DuplicateRows", iDParameter);
        }
    
        public virtual ObjectResult<SP_EXPORT_ResourceData_Result> SP_EXPORT_ResourceData(Nullable<int> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EXPORT_ResourceData_Result>("SP_EXPORT_ResourceData", projectidParameter);
        }
    
        public virtual ObjectResult<string> SP_Filter_GetFinYear(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Filter_GetFinYear", projectIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Filter_GetMonths(Nullable<int> projectID, string fisYear)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fisYearParameter = fisYear != null ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Filter_GetMonths", projectIDParameter, fisYearParameter);
        }
    
        public virtual ObjectResult<string> SP_Filter_GetQuarter(string month)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Filter_GetQuarter", monthParameter);
        }
    
        public virtual ObjectResult<SP_Get_APP_PFL_RESOURCES_SS_V_Result> SP_Get_APP_PFL_RESOURCES_SS_V()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_APP_PFL_RESOURCES_SS_V_Result>("SP_Get_APP_PFL_RESOURCES_SS_V");
        }
    
        public virtual ObjectResult<string> SP_Get_Business()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_Business");
        }
    
        public virtual ObjectResult<string> SP_Get_BusinessUnit(string business)
        {
            var businessParameter = business != null ?
                new ObjectParameter("Business", business) :
                new ObjectParameter("Business", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_BusinessUnit", businessParameter);
        }
    
        public virtual ObjectResult<SP_Get_Capital_Comments_Result> SP_Get_Capital_Comments(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Capital_Comments_Result>("SP_Get_Capital_Comments", projectIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Get_CapitalExpenditureWBS(Nullable<int> pROJECTID)
        {
            var pROJECTIDParameter = pROJECTID.HasValue ?
                new ObjectParameter("PROJECTID", pROJECTID) :
                new ObjectParameter("PROJECTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_CapitalExpenditureWBS", pROJECTIDParameter);
        }
    
        public virtual ObjectResult<SP_Get_CapitalLabor_Comments_Result> SP_Get_CapitalLabor_Comments(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_CapitalLabor_Comments_Result>("SP_Get_CapitalLabor_Comments", projectIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_CompleteNotificationData_Result> SP_GET_CompleteNotificationData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CompleteNotificationData_Result>("SP_GET_CompleteNotificationData");
        }
    
        public virtual ObjectResult<SP_Get_Configure_RateCard_Result> SP_Get_Configure_RateCard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Configure_RateCard_Result>("SP_Get_Configure_RateCard");
        }
    
        public virtual ObjectResult<SP_Get_DE_CJI3_Data_Result> SP_Get_DE_CJI3_Data(string wBSnumber, string fisYear, string month, string expensecategory, string description, string pONumber)
        {
            var wBSnumberParameter = wBSnumber != null ?
                new ObjectParameter("WBSnumber", wBSnumber) :
                new ObjectParameter("WBSnumber", typeof(string));
    
            var fisYearParameter = fisYear != null ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var expensecategoryParameter = expensecategory != null ?
                new ObjectParameter("Expensecategory", expensecategory) :
                new ObjectParameter("Expensecategory", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var pONumberParameter = pONumber != null ?
                new ObjectParameter("PONumber", pONumber) :
                new ObjectParameter("PONumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DE_CJI3_Data_Result>("SP_Get_DE_CJI3_Data", wBSnumberParameter, fisYearParameter, monthParameter, expensecategoryParameter, descriptionParameter, pONumberParameter);
        }
    
        public virtual ObjectResult<SP_Get_DE_CJI3_Data_SelectedList_Result> SP_Get_DE_CJI3_Data_SelectedList(Nullable<int> projectID, string wBSnumber, string fisYear, string month, string expensecategory, string description)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var wBSnumberParameter = wBSnumber != null ?
                new ObjectParameter("WBSnumber", wBSnumber) :
                new ObjectParameter("WBSnumber", typeof(string));
    
            var fisYearParameter = fisYear != null ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var expensecategoryParameter = expensecategory != null ?
                new ObjectParameter("Expensecategory", expensecategory) :
                new ObjectParameter("Expensecategory", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DE_CJI3_Data_SelectedList_Result>("SP_Get_DE_CJI3_Data_SelectedList", projectIDParameter, wBSnumberParameter, fisYearParameter, monthParameter, expensecategoryParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<SP_Get_DE_CJI3_Total_Reconciliation_Remaining_Result> SP_Get_DE_CJI3_Total_Reconciliation_Remaining(Nullable<int> projectID, Nullable<int> fisYear)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fisYearParameter = fisYear.HasValue ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DE_CJI3_Total_Reconciliation_Remaining_Result>("SP_Get_DE_CJI3_Total_Reconciliation_Remaining", projectIDParameter, fisYearParameter);
        }
    
        public virtual ObjectResult<string> SP_Get_DE_FiscalYear(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_DE_FiscalYear", projectIDParameter);
        }
    
        public virtual ObjectResult<SP_Get_DeltaSummary_Result> SP_Get_DeltaSummary(Nullable<int> projectID, Nullable<int> fisyear, string title)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fisyearParameter = fisyear.HasValue ?
                new ObjectParameter("Fisyear", fisyear) :
                new ObjectParameter("Fisyear", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DeltaSummary_Result>("SP_Get_DeltaSummary", projectIDParameter, fisyearParameter, titleParameter);
        }
    
        public virtual ObjectResult<SP_Get_DirectExpenses_CheckBook_Result> SP_Get_DirectExpenses_CheckBook(Nullable<int> projectid, Nullable<int> fisyear)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var fisyearParameter = fisyear.HasValue ?
                new ObjectParameter("fisyear", fisyear) :
                new ObjectParameter("fisyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DirectExpenses_CheckBook_Result>("SP_Get_DirectExpenses_CheckBook", projectidParameter, fisyearParameter);
        }
    
        public virtual ObjectResult<SP_Get_DirectExpenses_Comments_Result> SP_Get_DirectExpenses_Comments(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DirectExpenses_Comments_Result>("SP_Get_DirectExpenses_Comments", projectIDParameter);
        }
    
        public virtual ObjectResult<SP_Get_DirectExpensesInfo_CJI3_Selection_Result> SP_Get_DirectExpensesInfo_CJI3_Selection(Nullable<int> projectID, string fisYear, string wBSNumber, string expanceCategory, string description)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fisYearParameter = fisYear != null ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(string));
    
            var wBSNumberParameter = wBSNumber != null ?
                new ObjectParameter("WBSNumber", wBSNumber) :
                new ObjectParameter("WBSNumber", typeof(string));
    
            var expanceCategoryParameter = expanceCategory != null ?
                new ObjectParameter("ExpanceCategory", expanceCategory) :
                new ObjectParameter("ExpanceCategory", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_DirectExpensesInfo_CJI3_Selection_Result>("SP_Get_DirectExpensesInfo_CJI3_Selection", projectIDParameter, fisYearParameter, wBSNumberParameter, expanceCategoryParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<string> SP_Get_FiscalYear(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_FiscalYear", projectIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Get_HighOrg(string business, string businessUnit)
        {
            var businessParameter = business != null ?
                new ObjectParameter("Business", business) :
                new ObjectParameter("Business", typeof(string));
    
            var businessUnitParameter = businessUnit != null ?
                new ObjectParameter("BusinessUnit", businessUnit) :
                new ObjectParameter("BusinessUnit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_HighOrg", businessParameter, businessUnitParameter);
        }
    
        public virtual ObjectResult<SP_Get_Master_AOPProject_Result> SP_Get_Master_AOPProject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Master_AOPProject_Result>("SP_Get_Master_AOPProject");
        }
    
        public virtual ObjectResult<SP_Get_Master_ProjectChargeBack_Result> SP_Get_Master_ProjectChargeBack()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Master_ProjectChargeBack_Result>("SP_Get_Master_ProjectChargeBack");
        }
    
        public virtual ObjectResult<SP_Get_Master_Snapshot_Config_Result> SP_Get_Master_Snapshot_Config()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Master_Snapshot_Config_Result>("SP_Get_Master_Snapshot_Config");
        }
    
        public virtual ObjectResult<string> SP_Get_MidOrg(string business, string businessUnit, string highOrg)
        {
            var businessParameter = business != null ?
                new ObjectParameter("Business", business) :
                new ObjectParameter("Business", typeof(string));
    
            var businessUnitParameter = businessUnit != null ?
                new ObjectParameter("BusinessUnit", businessUnit) :
                new ObjectParameter("BusinessUnit", typeof(string));
    
            var highOrgParameter = highOrg != null ?
                new ObjectParameter("HighOrg", highOrg) :
                new ObjectParameter("HighOrg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_MidOrg", businessParameter, businessUnitParameter, highOrgParameter);
        }
    
        public virtual ObjectResult<SP_GET_Notification_Result> SP_GET_Notification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_Notification_Result>("SP_GET_Notification");
        }
    
        public virtual ObjectResult<SP_GET_NotificationData_Result> SP_GET_NotificationData(Nullable<int> notificationid)
        {
            var notificationidParameter = notificationid.HasValue ?
                new ObjectParameter("notificationid", notificationid) :
                new ObjectParameter("notificationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_NotificationData_Result>("SP_GET_NotificationData", notificationidParameter);
        }
    
        public virtual ObjectResult<string> SP_Get_OperatingExpenseWBS(Nullable<int> pROJECTID)
        {
            var pROJECTIDParameter = pROJECTID.HasValue ?
                new ObjectParameter("PROJECTID", pROJECTID) :
                new ObjectParameter("PROJECTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_OperatingExpenseWBS", pROJECTIDParameter);
        }
    
        public virtual ObjectResult<SP_Get_PrimaryProjectData_Result> SP_Get_PrimaryProjectData(string projectID)
        {
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_PrimaryProjectData_Result>("SP_Get_PrimaryProjectData", projectIDParameter);
        }
    
        public virtual ObjectResult<SP_Get_Projects_Result> SP_Get_Projects()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Projects_Result>("SP_Get_Projects");
        }
    
        public virtual ObjectResult<string> SP_Get_RequiredSkills(string business, string businessUnit, string highOrg, string midOrg, string team)
        {
            var businessParameter = business != null ?
                new ObjectParameter("Business", business) :
                new ObjectParameter("Business", typeof(string));
    
            var businessUnitParameter = businessUnit != null ?
                new ObjectParameter("BusinessUnit", businessUnit) :
                new ObjectParameter("BusinessUnit", typeof(string));
    
            var highOrgParameter = highOrg != null ?
                new ObjectParameter("HighOrg", highOrg) :
                new ObjectParameter("HighOrg", typeof(string));
    
            var midOrgParameter = midOrg != null ?
                new ObjectParameter("MidOrg", midOrg) :
                new ObjectParameter("MidOrg", typeof(string));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_RequiredSkills", businessParameter, businessUnitParameter, highOrgParameter, midOrgParameter, teamParameter);
        }
    
        public virtual ObjectResult<SP_Get_Resource_Comments_Result> SP_Get_Resource_Comments(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Resource_Comments_Result>("SP_Get_Resource_Comments", projectIDParameter);
        }
    
        public virtual ObjectResult<SP_Get_ResourceCheckBook_Result> SP_Get_ResourceCheckBook(Nullable<int> projectID, string wBSNumber, string bU, string highOrg, string midOrg, string team, string requiredSkills, Nullable<int> fisYear)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var wBSNumberParameter = wBSNumber != null ?
                new ObjectParameter("WBSNumber", wBSNumber) :
                new ObjectParameter("WBSNumber", typeof(string));
    
            var bUParameter = bU != null ?
                new ObjectParameter("BU", bU) :
                new ObjectParameter("BU", typeof(string));
    
            var highOrgParameter = highOrg != null ?
                new ObjectParameter("HighOrg", highOrg) :
                new ObjectParameter("HighOrg", typeof(string));
    
            var midOrgParameter = midOrg != null ?
                new ObjectParameter("MidOrg", midOrg) :
                new ObjectParameter("MidOrg", typeof(string));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var requiredSkillsParameter = requiredSkills != null ?
                new ObjectParameter("RequiredSkills", requiredSkills) :
                new ObjectParameter("RequiredSkills", typeof(string));
    
            var fisYearParameter = fisYear.HasValue ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_ResourceCheckBook_Result>("SP_Get_ResourceCheckBook", projectIDParameter, wBSNumberParameter, bUParameter, highOrgParameter, midOrgParameter, teamParameter, requiredSkillsParameter, fisYearParameter);
        }
    
        public virtual ObjectResult<SP_Get_ResourceCheckBook_MainList_Result> SP_Get_ResourceCheckBook_MainList(Nullable<int> projectID, Nullable<int> fisyear)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fisyearParameter = fisyear.HasValue ?
                new ObjectParameter("Fisyear", fisyear) :
                new ObjectParameter("Fisyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_ResourceCheckBook_MainList_Result>("SP_Get_ResourceCheckBook_MainList", projectIDParameter, fisyearParameter);
        }
    
        public virtual ObjectResult<SP_Get_ResourceCheckBook_Summary_Result> SP_Get_ResourceCheckBook_Summary(Nullable<int> projectID, Nullable<int> fisyear)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var fisyearParameter = fisyear.HasValue ?
                new ObjectParameter("Fisyear", fisyear) :
                new ObjectParameter("Fisyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_ResourceCheckBook_Summary_Result>("SP_Get_ResourceCheckBook_Summary", projectIDParameter, fisyearParameter);
        }
    
        public virtual ObjectResult<SP_Get_ResourceCheckBookData_Result> SP_Get_ResourceCheckBookData(string wBSNumber, string bU, string highOrg, string midOrg, string team, string requiredSkills, Nullable<int> fisYear)
        {
            var wBSNumberParameter = wBSNumber != null ?
                new ObjectParameter("WBSNumber", wBSNumber) :
                new ObjectParameter("WBSNumber", typeof(string));
    
            var bUParameter = bU != null ?
                new ObjectParameter("BU", bU) :
                new ObjectParameter("BU", typeof(string));
    
            var highOrgParameter = highOrg != null ?
                new ObjectParameter("HighOrg", highOrg) :
                new ObjectParameter("HighOrg", typeof(string));
    
            var midOrgParameter = midOrg != null ?
                new ObjectParameter("MidOrg", midOrg) :
                new ObjectParameter("MidOrg", typeof(string));
    
            var teamParameter = team != null ?
                new ObjectParameter("Team", team) :
                new ObjectParameter("Team", typeof(string));
    
            var requiredSkillsParameter = requiredSkills != null ?
                new ObjectParameter("RequiredSkills", requiredSkills) :
                new ObjectParameter("RequiredSkills", typeof(string));
    
            var fisYearParameter = fisYear.HasValue ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_ResourceCheckBookData_Result>("SP_Get_ResourceCheckBookData", wBSNumberParameter, bUParameter, highOrgParameter, midOrgParameter, teamParameter, requiredSkillsParameter, fisYearParameter);
        }
    
        public virtual ObjectResult<SP_Get_Skillmaster_Result> SP_Get_Skillmaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Skillmaster_Result>("SP_Get_Skillmaster");
        }
    
        public virtual ObjectResult<string> SP_GET_SnapshotTitle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_SnapshotTitle");
        }
    
        public virtual int SP_Get_SwapProjects(Nullable<int> primaryProject, Nullable<int> secondaryProject)
        {
            var primaryProjectParameter = primaryProject.HasValue ?
                new ObjectParameter("PrimaryProject", primaryProject) :
                new ObjectParameter("PrimaryProject", typeof(int));
    
            var secondaryProjectParameter = secondaryProject.HasValue ?
                new ObjectParameter("SecondaryProject", secondaryProject) :
                new ObjectParameter("SecondaryProject", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Get_SwapProjects", primaryProjectParameter, secondaryProjectParameter);
        }
    
        public virtual ObjectResult<string> SP_Get_Team(string business, string businessUnit, string highOrg, string midOrg)
        {
            var businessParameter = business != null ?
                new ObjectParameter("Business", business) :
                new ObjectParameter("Business", typeof(string));
    
            var businessUnitParameter = businessUnit != null ?
                new ObjectParameter("BusinessUnit", businessUnit) :
                new ObjectParameter("BusinessUnit", typeof(string));
    
            var highOrgParameter = highOrg != null ?
                new ObjectParameter("HighOrg", highOrg) :
                new ObjectParameter("HighOrg", typeof(string));
    
            var midOrgParameter = midOrg != null ?
                new ObjectParameter("MidOrg", midOrg) :
                new ObjectParameter("MidOrg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Get_Team", businessParameter, businessUnitParameter, highOrgParameter, midOrgParameter);
        }
    
        public virtual ObjectResult<SP_GetCapitalData_Result> SP_GetCapitalData(Nullable<int> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCapitalData_Result>("SP_GetCapitalData", projectidParameter);
        }
    
        public virtual ObjectResult<SP_GetCapitalLaborData_Result> SP_GetCapitalLaborData(Nullable<int> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCapitalLaborData_Result>("SP_GetCapitalLaborData", projectidParameter);
        }
    
        public virtual ObjectResult<SP_GetDirectExpensesData_Result> SP_GetDirectExpensesData(Nullable<int> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDirectExpensesData_Result>("SP_GetDirectExpensesData", projectidParameter);
        }
    
        public virtual ObjectResult<SP_GetDirectExpensesData_forcheckbookedit_Result> SP_GetDirectExpensesData_forcheckbookedit(Nullable<int> projectID, string wBSnumber, Nullable<int> fisyear, string expensecategory, string description)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var wBSnumberParameter = wBSnumber != null ?
                new ObjectParameter("WBSnumber", wBSnumber) :
                new ObjectParameter("WBSnumber", typeof(string));
    
            var fisyearParameter = fisyear.HasValue ?
                new ObjectParameter("Fisyear", fisyear) :
                new ObjectParameter("Fisyear", typeof(int));
    
            var expensecategoryParameter = expensecategory != null ?
                new ObjectParameter("Expensecategory", expensecategory) :
                new ObjectParameter("Expensecategory", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDirectExpensesData_forcheckbookedit_Result>("SP_GetDirectExpensesData_forcheckbookedit", projectIDParameter, wBSnumberParameter, fisyearParameter, expensecategoryParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<SP_Getlastmodifiedinfo_Result> SP_Getlastmodifiedinfo(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Getlastmodifiedinfo_Result>("SP_Getlastmodifiedinfo", projectIDParameter);
        }
    
        public virtual ObjectResult<SP_GetProject_Summary_Result> SP_GetProject_Summary(string projectID, string fisYear, string month, string qtr)
        {
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            var fisYearParameter = fisYear != null ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var qtrParameter = qtr != null ?
                new ObjectParameter("Qtr", qtr) :
                new ObjectParameter("Qtr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProject_Summary_Result>("SP_GetProject_Summary", projectIDParameter, fisYearParameter, monthParameter, qtrParameter);
        }
    
        public virtual ObjectResult<SP_GetResourceData_Result> SP_GetResourceData(Nullable<int> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetResourceData_Result>("SP_GetResourceData", projectidParameter);
        }
    
        public virtual ObjectResult<SP_GetResourceData_forCheckBook_Result> SP_GetResourceData_forCheckBook(Nullable<int> projectid, string wBSNumber, string bU, string highOrg, string midOrg, string teams, string requiredSkills, Nullable<int> fisYear)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var wBSNumberParameter = wBSNumber != null ?
                new ObjectParameter("WBSNumber", wBSNumber) :
                new ObjectParameter("WBSNumber", typeof(string));
    
            var bUParameter = bU != null ?
                new ObjectParameter("BU", bU) :
                new ObjectParameter("BU", typeof(string));
    
            var highOrgParameter = highOrg != null ?
                new ObjectParameter("HighOrg", highOrg) :
                new ObjectParameter("HighOrg", typeof(string));
    
            var midOrgParameter = midOrg != null ?
                new ObjectParameter("MidOrg", midOrg) :
                new ObjectParameter("MidOrg", typeof(string));
    
            var teamsParameter = teams != null ?
                new ObjectParameter("Teams", teams) :
                new ObjectParameter("Teams", typeof(string));
    
            var requiredSkillsParameter = requiredSkills != null ?
                new ObjectParameter("RequiredSkills", requiredSkills) :
                new ObjectParameter("RequiredSkills", typeof(string));
    
            var fisYearParameter = fisYear.HasValue ?
                new ObjectParameter("FisYear", fisYear) :
                new ObjectParameter("FisYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetResourceData_forCheckBook_Result>("SP_GetResourceData_forCheckBook", projectidParameter, wBSNumberParameter, bUParameter, highOrgParameter, midOrgParameter, teamsParameter, requiredSkillsParameter, fisYearParameter);
        }
    
        public virtual int SP_GetSummaryData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetSummaryData");
        }
    
        public virtual int SP_Insert_Notification(Nullable<int> id, string title, string data, string status, string createdby)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Notification", idParameter, titleParameter, dataParameter, statusParameter, createdbyParameter);
        }
    
        public virtual int SP_InsertInto_ServiceLog(string serviceName, Nullable<int> rowsMoved)
        {
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var rowsMovedParameter = rowsMoved.HasValue ?
                new ObjectParameter("RowsMoved", rowsMoved) :
                new ObjectParameter("RowsMoved", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertInto_ServiceLog", serviceNameParameter, rowsMovedParameter);
        }
    
        public virtual int SP_InsertResourcedata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertResourcedata");
        }
    
        public virtual int SP_PFL_MDT_FISCAL_DAYS_BulkInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PFL_MDT_FISCAL_DAYS_BulkInsert");
        }
    
        public virtual int SP_PFL_MDT_PDW_BulkInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PFL_MDT_PDW_BulkInsert");
        }
    
        public virtual int SP_PFL_MDT_Skills_BulkInsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PFL_MDT_Skills_BulkInsert");
        }
    
        public virtual int SP_Resource_Moverows(Nullable<int> fROM, Nullable<int> tO, Nullable<int> masterID, string tabName)
        {
            var fROMParameter = fROM.HasValue ?
                new ObjectParameter("FROM", fROM) :
                new ObjectParameter("FROM", typeof(int));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(int));
    
            var masterIDParameter = masterID.HasValue ?
                new ObjectParameter("MasterID", masterID) :
                new ObjectParameter("MasterID", typeof(int));
    
            var tabNameParameter = tabName != null ?
                new ObjectParameter("TabName", tabName) :
                new ObjectParameter("TabName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Resource_Moverows", fROMParameter, tOParameter, masterIDParameter, tabNameParameter);
        }
    
        public virtual ObjectResult<string> SP_validate_CloneProject(string cloneprojectID)
        {
            var cloneprojectIDParameter = cloneprojectID != null ?
                new ObjectParameter("CloneprojectID", cloneprojectID) :
                new ObjectParameter("CloneprojectID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_validate_CloneProject", cloneprojectIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Validate_Notification(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Validate_Notification", userIDParameter);
        }
    
        public virtual ObjectResult<string> SP_Validate_ProjectCode(string projectNumber)
        {
            var projectNumberParameter = projectNumber != null ?
                new ObjectParameter("ProjectNumber", projectNumber) :
                new ObjectParameter("ProjectNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Validate_ProjectCode", projectNumberParameter);
        }
    }
}
